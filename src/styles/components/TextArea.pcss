.$(prefix) {
  &--textarea {
    display: inline-flex;
    flex-flow: column wrap;
    width: calc(var(--size-container-08) * 2);

    &-light {
      & > .$(prefix)--textarea-input__container > .$(prefix)--textarea-input {
        border-color: var(--color-border-light);
        background-color: var(--color-background-light);
      }

      &.$(prefix)--textarea-readonly
        > .$(prefix)--textarea-input__container
        > .$(prefix)--textarea-input {
        border-color: var(--color-readonly);
        background-color: var(--color-readonly);
      }

      &.$(prefix)--textarea-disabled
        > .$(prefix)--textarea-input__container
        > .$(prefix)--textarea-input {
        border-color: var(--color-disabled);
        background-color: var(--color-disabled);
      }
    }

    &-top {
      display: inline-flex;
      justify-content: space-between;
    }

    &-charcounter {
      @mixin type--label;

      color: var(--color-font-text-03);

      &__exceeded {
        color: var(--color-font-danger);
      }
    }

    &-input {
      @mixin type--body-02;

      height: var(--size-container-07);
      padding: var(--size-spacing-05);
      transition: box-shadow var(--transition-app-01);
      border: var(--size-border) var(--style-border) var(--color-border);
      border-radius: var(--component-radius-02);
      outline: 0;
      background-color: var(--color-background);
      box-shadow: var(--component-shadow-01);
      color: var(--color-font-text-01);

      &:focus {
        outline: 0;
        box-shadow:
          0 0 0 0.0625rem var(--color-focus),
          0 0 0 0.25rem var(--color-focus-highlight);

        &::placeholder {
          transform: translateX(0.125rem);
          opacity: 0;
        }
      }

      &::placeholder {
        transition:
          transform var(--transition-app-01),
          opacity var(--transition-app-01);
        color: var(--color-font-placeholder);
      }

      &__container {
        display: inline-flex;
        position: relative;
        flex-flow: column;
      }

      &[disabled] {
        border-color: var(--color-disabled);
        background-color: var(--color-disabled);
        color: var(--color-font-disabled);
        cursor: not-allowed;

        &::placeholder {
          color: var(--color-font-disabled);
        }

        & + label {
          color: var(--color-font-disabled);
        }
      }

      &[readonly] {
        border-color: var(--color-readonly);
        background-color: var(--color-readonly);
        color: var(--color-font-readonly);

        &::placeholder {
          color: var(--color-font-readonly);
        }

        & + label {
          color: var(--color-font-readonly);
        }
      }
    }

    &-error {
      outline: var(--size-border-state) var(--style-border-focus)
        var(--color-danger);
      outline-offset: calc(var(--size-border-focus) * -1);

      &__text {
        @mixin type--label;

        display: flex;
        align-items: center;
        margin-top: var(--size-spacing-02);
        color: var(--color-font-danger);

        & > svg {
          margin-right: var(--size-spacing-02);
        }
      }
    }

    &-warning {
      outline: var(--size-border-state) var(--style-border-focus)
        var(--color-warning);
      outline-offset: calc(var(--size-border-focus) * -1);

      &__text {
        @mixin type--label;

        display: flex;
        align-items: center;
        margin-top: var(--size-spacing-02);
        color: var(--color-font-warning);

        & > svg {
          margin-right: var(--size-spacing-02);
        }
      }
    }
  }
  &--textarea.$(prefix)--skeleton {
    display: inline-flex;
    position: unset;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    overflow: unset;
    border-color: transparent;
    background-color: transparent;
    box-shadow: none;

    & > .$(prefix)--skeleton-animated {
      justify-content: flex-end;
      padding: 0 var(--size-spacing-05);
      border-radius: var(--component-radius-02);

      & > svg {
        transform: translateX(-0.0625rem);
        stroke: var(--color-skeleton-03);
      }
    }

    & > .$(prefix)--skeleton-container {
      align-items: flex-start;
    }
  }
}
